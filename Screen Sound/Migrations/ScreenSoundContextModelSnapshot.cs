// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Screen_Sound.Banco;

#nullable disable

namespace Screen_Sound.Migrations
{
    [DbContext(typeof(ScreenSoundContext))]
    partial class ScreenSoundContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Screen_Sound.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BandaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandaId");

                    b.ToTable("Albuns");
                });

            modelBuilder.Entity("Screen_Sound.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("BandaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("BandaId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Screen_Sound.Models.Banda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bandas");
                });

            modelBuilder.Entity("Screen_Sound.Models.Musica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArtista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Musica");
                });

            modelBuilder.Entity("Screen_Sound.Models.Album", b =>
                {
                    b.HasOne("Screen_Sound.Models.Banda", null)
                        .WithMany("ListaDeAlbuns")
                        .HasForeignKey("BandaId");
                });

            modelBuilder.Entity("Screen_Sound.Models.Avaliacao", b =>
                {
                    b.HasOne("Screen_Sound.Models.Album", null)
                        .WithMany("Notas")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Screen_Sound.Models.Banda", null)
                        .WithMany("notas")
                        .HasForeignKey("BandaId");
                });

            modelBuilder.Entity("Screen_Sound.Models.Musica", b =>
                {
                    b.HasOne("Screen_Sound.Models.Album", null)
                        .WithMany("MusicasAlbum")
                        .HasForeignKey("AlbumId");
                });

            modelBuilder.Entity("Screen_Sound.Models.Album", b =>
                {
                    b.Navigation("MusicasAlbum");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Screen_Sound.Models.Banda", b =>
                {
                    b.Navigation("ListaDeAlbuns");

                    b.Navigation("notas");
                });
#pragma warning restore 612, 618
        }
    }
}
